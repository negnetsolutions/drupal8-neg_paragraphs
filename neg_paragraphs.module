<?php

/**
 * @file
 * Negnet Solutions Paragraphs Module.
 */

use Drupal\neg_paragraphs\ParagraphProcessor;
use Drupal\negnet_utility\FieldUtilities;
use Drupal\Core\Entity\ContentEntityInterface;
use Drupal\field\Entity\FieldStorageConfig;

/**
 * Preprocesses responsive images.
 */
function neg_paragraphs_preprocess_responsive_image(&$variables) {
  if (isset($variables['height']) && isset($variables['width'])) {
    if ($variables['height'] > $variables['width']) {
      $variables['attributes']['class'][] = 'portrait';
      $variables['img_element']['#attributes']['class'][] = 'portrait';
    }
    else {
      $variables['attributes']['class'][] = 'landscape';
      $variables['img_element']['#attributes']['class'][] = 'landscape';
    }
  }
}

/**
 * Presents image styles.
 */
function neg_paragraphs_image_styles(FieldStorageConfig $definition, ContentEntityInterface $entity = NULL, $cacheable) {

    $responsive_image_styles = \Drupal::entityTypeManager()
          ->getListBuilder('responsive_image_style')
          ->getStorage()->loadMultiple();

    $responsive_image_options = [];
    if ($responsive_image_styles && !empty($responsive_image_styles)) {
      foreach ($responsive_image_styles as $machine_name => $responsive_image_style) {
        if ($responsive_image_style->hasImageStyleMappings()) {
          $responsive_image_options[$machine_name] = $responsive_image_style->label();
        }
      }
    }

    return $responsive_image_options;
}

/**
 * Implements hook_preprocess_html().
 */
function neg_paragraphs_preprocess_html(&$variables) {
  if (isset($GLOBALS['neg_fullscreen'])) {
    $variables['attributes']['class'][] = 'fullscreen';

    $node = \Drupal::request()->attributes->get('node');
    if ($node) {
      $variables['#cache'] = [];
      $variables['#cache']['tags'] = $node->getCacheTags();
    }
  }
}

/**
 * Implements hook_preprocess_paragraph().
 */
function neg_paragraphs_preprocess_paragraph(&$variables) {

  $p = new ParagraphProcessor();

  $method = FieldUtilities::camelCaseString('process_' . $variables['paragraph']->getType());

  if (method_exists($p, $method)) {
    $p->$method($variables);
  }

  \Drupal::moduleHandler()->alter('preprocess_neg_paragraph', $variables);
}

/**
 * Implements hook_theme().
 */
function neg_paragraphs_theme($existing, $type, $theme, $path) {
  return [

    'paragraph__paragraph_row' => [
      'template' => 'paragraph--row' ,
      'base hook' => 'paragraph',
    ],
    'paragraph__image' => [
      'template' => 'paragraph--image' ,
      'base hook' => 'paragraph',
    ],
    'paragraph__picture' => [
      'template' => 'paragraph--picture' ,
      'base hook' => 'paragraph',
    ],
    'paragraph__video' => [
      'template' => 'paragraph--video' ,
      'base hook' => 'paragraph',
    ],
    'paragraph__text_box' => [
      'template' => 'paragraph--textbox' ,
      'base hook' => 'paragraph',
    ],
    'paragraph__webform' => [
      'template' => 'paragraph--webform' ,
      'base hook' => 'paragraph',
    ],

  ];
}
